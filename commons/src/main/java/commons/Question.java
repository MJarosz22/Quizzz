package commons;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;


/**
 * Abstract base class for all Question-related classes
 * NOTE that all abstract methods MUST BE implemented in the child classes (unless those are abstract classes too).
 * - id: long attribute that is auto-generated by the DB
 * - title: the title of this specific question (different for each child class).
 */
public abstract class Question {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private long id;

    private String title;

    private int number;

    public Question() {
    }

    /**
     * Getter for the ID auto-generated by the database.
     *
     * @return long value representing the ID of a specific question
     */
    public long getId() {
        return id;
    }

    /**
     * Getter for the title of a question. It is displayed on the screen each time an user is asked to answer
     * a question.
     *
     * @return a String value representing the title of a question.
     */
    public String getTitle() {
        return title;
    }

    /**
     * Setter for the title of a question.
     *
     * @param title a String value representing the title of a question.
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for the answer to a specific question
     *
     * @return a long value representing the consumption we are interested in
     */
    public abstract long getAnswer();

    /**
     * Getter for the correct answer to a specific question
     *
     * @return a long value representing the consumption we are interested in
     */
    public abstract long getCorrectAnswer();

    /**
     * Additional method that converts information about a Question-related object into a user-friendly, more-readable format
     *
     * @return String value that presents all the necessary information about an Object we are interested in.
     */
    public abstract String toString();

    /**
     * Equals method that is going to be implemented by all question-related subclasses
     * @param o Object that is checked whether it is equal to 'this' instance
     * @return true, if this is the case, or false otherwise
     */
    public abstract boolean equals(Object o);


    /**
     * Getter for the INDEX of the button on which the correct activity will be displayed.
     * UNUSED in the case of QuestionHowMuch (open-question type).
     *
     * @return an integer from 1 to 3 expressing that button #(number) contains the correct activity.
     */
    public int getNumber() {
        return number;
    }

    /**
     * Setter for the INDEX of the button on which the correct activity will be displayed.
     * UNUSED in the case of QuestionHowMuch (open-question type).
     *
     * @param number an integer from 1 to 3 expressing that button #(number) contains the correct activity.
     */
    public void setNumber(int number) {
        this.number = number;
    }

    /**
     * Method that generates the hashCode for a specific object
     * @return an integer value representing the hashCode
     */
    @Override
    public abstract int hashCode();

}
